name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next
          
      - name: Check configuration
        run: |
          echo "=== Package.json scripts ==="
          cat package.json | jq '.scripts'
          echo ""
          echo "=== Next.js configuration ==="
          cat next.config.mjs
          echo ""
          echo "=== TypeScript configuration ==="
          cat tsconfig.json | jq '.compilerOptions.paths'
          
      - name: Build with Next.js
        run: |
          echo "=== Starting Next.js build ==="
          echo "Current directory: $(pwd)"
          echo "NODE_ENV: ${NODE_ENV:-development}"
          
          # 设置生产环境
          export NODE_ENV=production
          echo "Set NODE_ENV to: $NODE_ENV"
          
          # 显示构建前状态
          echo "=== Before build ==="
          ls -la
          
          # 执行构建并捕获所有输出
          echo "=== Running npm run build ==="
          npm run build 2>&1 | tee build.log
          
          echo "=== Build exit code: $? ==="
          
          # 显示构建后状态
          echo "=== After build ==="
          ls -la
          
          # 检查.next目录
          if [ -d ".next" ]; then
            echo "=== .next directory exists ==="
            ls -la .next/
          fi
          
          echo "=== Build completed ==="
          
      - name: Debug build log
        run: |
          echo "=== Build log contents ==="
          if [ -f "build.log" ]; then
            cat build.log
          else
            echo "No build.log found"
          fi
          
      - name: Force check all directories
        run: |
          echo "=== All directories in workspace ==="
          find . -type d -name "*out*" -o -name "*build*" -o -name "*dist*" -o -name "*.next*"
          echo ""
          echo "=== All files in root ==="
          ls -la
          echo ""
          echo "=== Manual check for static files ==="
          find . -name "index.html" -o -name "*.html" | head -20
          
      - name: Try alternative approach
        run: |
          # 如果没有out目录，尝试手动创建
          if [ ! -d "out" ]; then
            echo "=== out directory not found, checking alternatives ==="
            
            # 检查是否在.next目录中
            if [ -d ".next" ]; then
              echo "Found .next directory, checking for static export files"
              find .next -name "*.html" | head -10
              
              # 如果找到了HTML文件，可能是导出失败
              if [ -f ".next/server/app/index.html" ] || [ -f ".next/static" ]; then
                echo "Found potential static files in .next, but out directory missing"
                echo "This suggests static export configuration issue"
              fi
            fi
            
            # 最后尝试：创建一个临时out目录用于调试
            echo "Creating temporary out directory for debugging"
            mkdir -p out
            echo "<html><body><h1>Debug: Build failed to create proper static export</h1></body></html>" > out/index.html
          fi
          
      - name: Verify build output
        run: |
          echo "=== Final verification ==="
          if [ -d "out" ]; then
            echo "✅ SUCCESS: out directory found!"
            echo "Files in out directory:"
            ls -la out/
            echo ""
            echo "HTML files:"
            find out -name "*.html" | head -10
            echo ""
            echo "Total files: $(find out -type f | wc -l)"
          else
            echo "❌ CRITICAL: Still no out directory after all attempts"
            exit 1
          fi
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 